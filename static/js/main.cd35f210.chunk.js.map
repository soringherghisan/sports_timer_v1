{"version":3,"sources":["sounds/finish.wav","sounds/countdownBegins.wav","sounds/lastSecondBeep.wav","sounds/lastSecondsBeep.wav","ListItems.js","Timer.js","App.js","index.js"],"names":["module","exports","ListItems","props","listItems","items","map","item","className","isSelected","key","play","text","exerciseText","displayedMinutes","displayedSeconds","type","maxLength","value","onChange","e","setUpdate","target","disabled","blocking","onClick","duplicateItem","deleteItem","Timer","state","isCounting","seconds","minutes","hours","displayedHours","_secondsToFormat","totalDurationInSeconds","secondsDisplayed","totalDisplayedDurationInSeconds","Math","floor","hoursDisplayed","minutesDisplayed","setState","prevProps","this","style","paddingBottom","left","position","startCountdownItem","turnBlockingOn","stopCountdownItem","resetTimer","turnBlockingOff","id","margin","marginRight","right","color","React","Component","App","modalMessage","showModal","startCountdown","currentItem","textColor","backgroundColor","beepBeforeEnd","handleChangeText","Date","now","handleChangeSeconds","parseInt","handleChangeMinutes","_helperValidation","isNaN","Number","handleOpenModal","handleCloseModal","dupeItem","push","totalTimeCalculation","filteredItems","filter","totalTimeInSeconds","totalDisplayedTimeInSeconds","countdownInterval","arrayIndex","itemsArray","myInterval","setInterval","length","playAudioLastSecond","playAudioLastSeconds","clearInterval","playAudio","items_","soundCountdownCounter","timeout","setTimeout","timeBeep","playAudioCountdown","clearTimeout","handleAddButon","newItem","new_items","console","log","modalTimer","document","getElementsByClassName","visibility","src","finishSound","countdownSound","lastSeconds","lastSecond","min","max","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.cd35f210.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/finish.d02396a3.wav\";","module.exports = __webpack_public_path__ + \"static/media/countdownBegins.7b196d77.wav\";","module.exports = __webpack_public_path__ + \"static/media/lastSecondBeep.6d539868.wav\";","module.exports = __webpack_public_path__ + \"static/media/lastSecondsBeep.475b3522.wav\";","import React from \"react\";\r\nimport { VoicePlayer } from \"react-voice-components\";\r\nimport { Disable } from \"react-disable\";\r\n\r\nconst ListItems = (props) => {\r\n  const items = props.items;\r\n  const listItems = items.map((item) => {\r\n    return (\r\n      <div\r\n        className={\"activity \" + (item.isSelected ? \"active\" : \"\")}\r\n        key={item.key}\r\n      >\r\n        {item.isSelected ? <VoicePlayer play text={item.exerciseText} /> : \"\"}\r\n        <div className=\"activity-duration\">\r\n          {`${\r\n            item.displayedMinutes < 10\r\n              ? \"0\" + item.displayedMinutes\r\n              : item.displayedMinutes\r\n          }:${\r\n            item.displayedSeconds < 10\r\n              ? \"0\" + item.displayedSeconds\r\n              : item.displayedSeconds\r\n          }`}\r\n        </div>\r\n\r\n        <div className=\"activity-name\">\r\n          <input\r\n            type=\"text\"\r\n            maxLength=\"20\"\r\n            // id={item.key}\r\n            value={item.exerciseText}\r\n            onChange={(e) => {\r\n              props.setUpdate(e.target.value, item.key);\r\n            }}\r\n          />\r\n        </div>\r\n        <Disable disabled={props.blocking}>\r\n          <button\r\n            className=\"duplicate\"\r\n            onClick={() => {\r\n              props.duplicateItem(item.key);\r\n            }}\r\n          >\r\n            <i className=\"fa fa-plus\"></i>\r\n          </button>\r\n          <button\r\n            className=\"remove\"\r\n            onClick={() => {\r\n              props.deleteItem(item.key);\r\n            }}\r\n          >\r\n            <i className=\"fa fa-trash\"></i>\r\n          </button>\r\n        </Disable>\r\n      </div>\r\n    );\r\n  });\r\n  return <div className=\"third-row\">{listItems}</div>;\r\n};\r\n\r\nexport default ListItems;\r\n","import React from \"react\";\r\n\r\nclass Timer extends React.Component {\r\n  state = {\r\n    isCounting: false,\r\n    seconds: 0,\r\n    minutes: 0,\r\n    hours: 0,\r\n    displayedSeconds: 0,\r\n    displayedMinutes: 0,\r\n    displayedHours: 0,\r\n  };\r\n\r\n  // helper func to get this duration and turn into h - m - s\r\n  _secondsToFormat = () => {\r\n    let seconds = this.props.totalDurationInSeconds;\r\n    let secondsDisplayed = this.props.totalDisplayedDurationInSeconds;\r\n\r\n    let hours = Math.floor(seconds / 3600);\r\n    let hoursDisplayed = Math.floor(secondsDisplayed / 3600);\r\n\r\n    seconds = seconds - hours * 3600;\r\n    secondsDisplayed = secondsDisplayed - hoursDisplayed * 3600;\r\n\r\n    let minutes = Math.floor(seconds / 60);\r\n    let minutesDisplayed = Math.floor(secondsDisplayed / 60);\r\n\r\n    seconds = seconds - minutes * 60;\r\n    secondsDisplayed = secondsDisplayed - minutesDisplayed * 60;\r\n    this.setState({\r\n      seconds: seconds || 0,\r\n      minutes: minutes || 0,\r\n      hours: hours || 0,\r\n      displayedSeconds: secondsDisplayed || 0,\r\n      displayedMinutes: minutesDisplayed || 0,\r\n      displayedHours: hoursDisplayed || 0,\r\n    });\r\n  };\r\n\r\n  // this updates seconds when item is added or deleted;\r\n  // without it we are one step behind\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.totalDurationInSeconds !== this.props.totalDurationInSeconds ||\r\n      prevProps.totalDisplayedDurationInSeconds !==\r\n        this.props.totalDisplayedDurationInSeconds\r\n    ) {\r\n      this._secondsToFormat();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ paddingBottom: \"0.4em\" }}>\r\n        <div className=\"last-row\">\r\n          <div className=\"player\" style={{ left: \"0\", position: \"absolute\" }}>\r\n            <button\r\n              onClick={() => {\r\n                this.props.startCountdownItem();\r\n                this.props.turnBlockingOn();\r\n              }}\r\n            >\r\n              <i className=\"play icon small\"></i>\r\n            </button>\r\n            <button onClick={this.props.stopCountdownItem}>\r\n              <i className=\"pause icon small\"></i>\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.props.resetTimer();\r\n                this.props.turnBlockingOff();\r\n              }}\r\n            >\r\n              <i className=\"undo icon small\"></i>\r\n            </button>\r\n          </div>\r\n          <div id=\"timer\">\r\n            <h1>\r\n              Countdown:{\" \"}\r\n              {`${\r\n                this.state.displayedHours < 10\r\n                  ? \"0\" + this.state.displayedHours\r\n                  : this.state.displayedHours\r\n              }:${\r\n                this.state.displayedMinutes < 10\r\n                  ? \"0\" + this.state.displayedMinutes\r\n                  : this.state.displayedMinutes\r\n              }:${\r\n                this.state.displayedSeconds < 10\r\n                  ? \"0\" + this.state.displayedSeconds\r\n                  : this.state.displayedSeconds\r\n              }`}\r\n            </h1>\r\n          </div>\r\n          <h5\r\n            style={{\r\n              margin: \"0px\",\r\n              marginRight: \"0.5em\",\r\n              position: \"absolute\",\r\n              right: \"0\",\r\n              color: \"rgb(86, 207, 225)\",\r\n            }}\r\n          >\r\n            Total:{\" \"}\r\n            {`${\r\n              this.state.hours < 10 ? \"0\" + this.state.hours : this.state.hours\r\n            }:${\r\n              this.state.minutes < 10\r\n                ? \"0\" + this.state.minutes\r\n                : this.state.minutes\r\n            }:${\r\n              this.state.seconds < 10\r\n                ? \"0\" + this.state.seconds\r\n                : this.state.seconds\r\n            }`}\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n\r\n/*\r\n        <button onClick={this.startTimer}>start</button>\r\n        <button onClick={this.stopTimer}>stop</button>\r\n        <button onClick={this.resetTimer}>reset</button>\r\n*/\r\n","import React from \"react\";\r\nimport ListItems from \"./ListItems\";\r\nimport Timer from \"./Timer\";\r\n\r\n// external components import\r\nimport { Disable } from \"react-disable\";\r\n\r\n// sound file imports\r\nimport finishSound from \"./sounds/finish.wav\";\r\nimport countdownSound from \"./sounds/countdownBegins.wav\";\r\nimport lastSecond from \"./sounds/lastSecondBeep.wav\";\r\nimport lastSeconds from \"./sounds/lastSecondsBeep.wav\";\r\n\r\n// define the App class-based component\r\nclass App extends React.Component {\r\n  state = {\r\n    modalMessage: \"\",\r\n    showModal: false,\r\n    startCountdown: true,\r\n    isCounting: false,\r\n    blocking: false,\r\n    items: [],\r\n    totalDurationInSeconds: 0,\r\n    totalDisplayedDurationInSeconds: 0,\r\n    currentItem: {\r\n      exerciseText: \"\",\r\n      textColor: \"\",\r\n      backgroundColor: \"\",\r\n      beepBeforeEnd: 0,\r\n      minutes: 0,\r\n      seconds: 0,\r\n      displayedMinutes: 0,\r\n      displayedSeconds: 0,\r\n      key: \"\",\r\n      isSelected: false,\r\n      isCounting: false,\r\n    },\r\n  };\r\n\r\n  // modal funcs ******************\r\n  handleOpenModal() {\r\n    this.setState({ showModal: true });\r\n  }\r\n  handleCloseModal() {\r\n    const modalTimer = setTimeout(() => {\r\n      this.setState({ showModal: false, modalMessage: \"\" });\r\n      clearTimeout(modalTimer);\r\n    }, 3000);\r\n  }\r\n\r\n  // audio funcs ******************\r\n  playAudio() {\r\n    const audioEl = document.getElementsByClassName(\"audio-element\")[0];\r\n    audioEl.play();\r\n  }\r\n  playAudioCountdown() {\r\n    const audioEl = document.getElementsByClassName(\"audio-element\")[1];\r\n    audioEl.play();\r\n  }\r\n  playAudioLastSeconds() {\r\n    const audioEl = document.getElementsByClassName(\"audio-element\")[2];\r\n    audioEl.play();\r\n  }\r\n  playAudioLastSecond() {\r\n    const audioEl = document.getElementsByClassName(\"audio-element\")[3];\r\n    audioEl.play();\r\n  }\r\n\r\n  // handle changes - coulda written them in jsx but this is ok too\r\n  // also adding unique key in this action\r\n  handleChangeText = (e) => {\r\n    // console.log(e.target.value);\r\n    this.setState({\r\n      currentItem: {\r\n        ...this.state.currentItem,\r\n        exerciseText: e.target.value,\r\n        key: Date.now(),\r\n      },\r\n    });\r\n  };\r\n  handleChangeSeconds = (e) => {\r\n    // console.log(e.target.value);\r\n    this.setState({\r\n      currentItem: {\r\n        ...this.state.currentItem,\r\n        seconds: parseInt(e.target.value),\r\n        displayedSeconds: parseInt(e.target.value),\r\n      },\r\n    });\r\n  };\r\n  handleChangeMinutes = (e) => {\r\n    // console.log(e.target.value);\r\n    this.setState({\r\n      currentItem: {\r\n        ...this.state.currentItem,\r\n        minutes: parseInt(e.target.value),\r\n        displayedMinutes: parseInt(e.target.value),\r\n      },\r\n    });\r\n  };\r\n\r\n  // toggle ui blocking\r\n  turnBlockingOn = () => {\r\n    this.setState({ blocking: true });\r\n  };\r\n  turnBlockingOff = () => {\r\n    this.setState({ blocking: false });\r\n  };\r\n\r\n  // validation func.\r\n  _helperValidation = () => {\r\n    if (!this.state.currentItem.exerciseText) {\r\n      this.setState({ modalMessage: \"Exercise must have a name\" }, () => {\r\n        this.handleOpenModal();\r\n        this.handleCloseModal();\r\n      });\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      isNaN(Number(this.state.currentItem.displayedMinutes)) ||\r\n      isNaN(Number(this.state.currentItem.displayedSeconds)) ||\r\n      this.state.currentItem.displayedMinutes === \"\" ||\r\n      this.state.currentItem.displayedSeconds === \"\"\r\n    ) {\r\n      this.setState(\r\n        { modalMessage: \"Only numbers accepted in Seconds and Minutes inputs\" },\r\n        () => {\r\n          this.handleOpenModal();\r\n          this.handleCloseModal();\r\n        }\r\n      );\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      !(\r\n        this.state.currentItem.displayedMinutes >= 0 &&\r\n        this.state.currentItem.minutes <= 59\r\n      )\r\n    ) {\r\n      this.setState(\r\n        { modalMessage: \"Minutes input is not within 0-59 range\" },\r\n        () => {\r\n          this.handleOpenModal();\r\n          this.handleCloseModal();\r\n        }\r\n      );\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      !(\r\n        this.state.currentItem.displayedSeconds >= 0 &&\r\n        this.state.currentItem.displayedSeconds <= 59\r\n      )\r\n    ) {\r\n      this.setState(\r\n        { modalMessage: \"Seconds input is not within 0-59 range\" },\r\n        () => {\r\n          this.handleOpenModal();\r\n          this.handleCloseModal();\r\n        }\r\n      );\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      !(\r\n        this.state.currentItem.displayedMinutes > 0 ||\r\n        this.state.currentItem.displayedSeconds > 0\r\n      )\r\n    ) {\r\n      this.setState(\r\n        { modalMessage: \"Overall time has to be more than 1 second.\" },\r\n        () => {\r\n          this.handleOpenModal();\r\n          this.handleCloseModal();\r\n        }\r\n      );\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // duplicate item and add at bottom\r\n  duplicateItem = (key) => {\r\n    const items = this.state.items;\r\n    items.map((item) => {\r\n      if (item.key === key) {\r\n        // console.log(item.key + \"    \" + key);\r\n        const dupeItem = { ...item };\r\n        dupeItem.key = Date.now();\r\n        items.push(dupeItem);\r\n      }\r\n    });\r\n    this.setState(\r\n      {\r\n        items: items,\r\n      },\r\n      this.totalTimeCalculation\r\n    );\r\n  };\r\n\r\n  // delete item func.\r\n  deleteItem = (key) => {\r\n    const filteredItems = this.state.items.filter((item) => item.key !== key);\r\n    this.setState(\r\n      {\r\n        items: filteredItems,\r\n      },\r\n      this.totalTimeCalculation\r\n    );\r\n  };\r\n\r\n  // update item in list func.\r\n  setUpdate = (text, key) => {\r\n    // console.log(\"items:\" + this.state.items);\r\n    const items = this.state.items;\r\n    items.map((item) => {\r\n      if (item.key === key) {\r\n        // console.log(item.key + \"    \" + key);\r\n        item.exerciseText = text;\r\n      }\r\n    });\r\n    this.setState({\r\n      items: items,\r\n    });\r\n  };\r\n\r\n  // func to turn minutes and seconds into seconds\r\n  // also updates state - used to circumvent one step behind issue\r\n  totalTimeCalculation = () => {\r\n    let totalTimeInSeconds = 0;\r\n    let totalDisplayedTimeInSeconds = 0;\r\n    for (const item of this.state.items) {\r\n      totalTimeInSeconds += item.seconds + item.minutes * 60;\r\n      totalDisplayedTimeInSeconds +=\r\n        item.displayedSeconds + item.displayedMinutes * 60;\r\n    }\r\n    // convert to hh:mm:ss format\r\n    // return new Date(totalTimeInSeconds * 1000).toISOString().substr(11, 8);\r\n    this.setState({\r\n      totalDurationInSeconds: totalTimeInSeconds,\r\n      totalDisplayedDurationInSeconds: totalDisplayedTimeInSeconds,\r\n    });\r\n  };\r\n\r\n  // helper func for countdown timer individual\r\n  countdownInterval = (arrayIndex, itemsArray) => {\r\n    if (this.state.totalDisplayedDurationInSeconds !== 0) {\r\n      this.myInterval = setInterval(() => {\r\n        if (arrayIndex < itemsArray.length) {\r\n          const item = itemsArray[arrayIndex];\r\n          let { displayedSeconds, displayedMinutes } = item;\r\n\r\n          if (displayedSeconds > 0) {\r\n            item.displayedSeconds = displayedSeconds - 1;\r\n            item.isCounting = true;\r\n            item.isSelected = true;\r\n            if (displayedMinutes === 0 && displayedSeconds === 1) {\r\n              this.playAudioLastSecond();\r\n            } else if (displayedMinutes === 0 && displayedSeconds < 5) {\r\n              this.playAudioLastSeconds();\r\n            }\r\n            this.setState({\r\n              items: itemsArray,\r\n            });\r\n            this.totalTimeCalculation();\r\n          }\r\n\r\n          if (displayedSeconds === 0) {\r\n            if (displayedMinutes === 0) {\r\n              item.isCounting = false;\r\n              item.isSelected = false;\r\n              // this.playAudioLastSecond();\r\n              this.setState({\r\n                items: itemsArray,\r\n              });\r\n              this.totalTimeCalculation();\r\n              clearInterval(this.myInterval);\r\n              if (itemsArray[arrayIndex + 1]) {\r\n                this.countdownInterval(arrayIndex + 1, itemsArray);\r\n              } else {\r\n                // code here for when displayed seconds = 0;\r\n                this.setState({\r\n                  isCounting: false,\r\n                  startCountdown: false,\r\n                });\r\n                this.playAudio();\r\n              }\r\n            } else {\r\n              item.displayedMinutes = displayedMinutes - 1;\r\n              item.displayedSeconds = 59;\r\n              item.isCounting = true;\r\n              item.isSelected = true;\r\n              this.setState({\r\n                items: itemsArray,\r\n              });\r\n              this.totalTimeCalculation();\r\n            }\r\n          }\r\n        } else {\r\n          clearInterval(this.myInterval);\r\n        }\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  // func to start counter for items from Timer component\r\n  startCountdownItem = () => {\r\n    const items_ = this.state.items;\r\n    let counter = 0;\r\n    let soundCountdownCounter = 0;\r\n\r\n    if (\r\n      !this.state.isCounting &&\r\n      this.state.startCountdown &&\r\n      this.state.totalDurationInSeconds !== 0\r\n    ) {\r\n      const timeout = setTimeout(() => {\r\n        this.countdownInterval(counter, items_);\r\n      }, 3000);\r\n\r\n      const timeBeep = setInterval(() => {\r\n        this.playAudioCountdown();\r\n        soundCountdownCounter++;\r\n        if (soundCountdownCounter === 3) {\r\n          clearInterval(timeBeep);\r\n          clearTimeout(timeout);\r\n        }\r\n      }, 1010);\r\n    } else if (!this.state.isCounting) {\r\n      this.setState(\r\n        {\r\n          isCounting: true,\r\n          startCountdown: false,\r\n        },\r\n        this.countdownInterval(counter, items_)\r\n      );\r\n    }\r\n  };\r\n\r\n  // func to stop counter for current item - which also stops display below from dropping\r\n  stopCountdownItem = () => {\r\n    if (this.myInterval) {\r\n      clearInterval(this.myInterval);\r\n      this.setState({\r\n        isCounting: false,\r\n        startCountdown: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  // timer function - minutes and seconds - and hours\r\n  resetTimer = () => {\r\n    if (this.myInterval) {\r\n      clearInterval(this.myInterval);\r\n\r\n      const items = this.state.items;\r\n      for (const item of items) {\r\n        item.displayedSeconds = item.seconds;\r\n        item.displayedMinutes = item.minutes;\r\n        item.isSelected = false;\r\n        item.isCounting = false;\r\n      }\r\n      this.setState({\r\n        items: items,\r\n        isCounting: false,\r\n        startCountdown: true,\r\n      });\r\n      this.totalTimeCalculation();\r\n    }\r\n  };\r\n\r\n  // func to determine what happens when Add button is pressed\r\n  handleAddButon = () => {\r\n    // validation check first\r\n    const validation = this._helperValidation();\r\n    if (validation) {\r\n      // add new item to items array\r\n      const newItem = this.state.currentItem;\r\n      const new_items = [...this.state.items, newItem];\r\n\r\n      // add to list and reset new item -- also update state again using callback\r\n      this.setState(\r\n        {\r\n          items: new_items,\r\n          currentItem: {\r\n            ...this.state.currentItem,\r\n            exerciseText: \"\",\r\n            minutes: 0,\r\n            seconds: 0,\r\n            displayedMinutes: 0,\r\n            displayedSeconds: 0,\r\n            key: \"\",\r\n          },\r\n        },\r\n        this.totalTimeCalculation\r\n      );\r\n    } else {\r\n      console.log(\"Error - Validation did not pass - retry the form\");\r\n    }\r\n  };\r\n\r\n  // App render - html **************************\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1 className=\"title\">Super Sports Timer</h1>\r\n\r\n        <div\r\n          style={{ visibility: this.state.showModal ? \"visible\" : \"hidden\" }}\r\n          className=\"modal\"\r\n        >\r\n          {this.state.modalMessage}\r\n        </div>\r\n\r\n        {/* Audio divs for loading sounds */}\r\n        <div style={{ visibility: \"hidden\" }}>\r\n          <div style={{ visibility: \"hidden\" }}>\r\n            <audio src={finishSound} className=\"audio-element\"></audio>\r\n          </div>\r\n          <div style={{ visibility: \"hidden\" }}>\r\n            <audio src={countdownSound} className=\"audio-element\"></audio>\r\n          </div>\r\n          <div style={{ visibility: \"hidden\" }}>\r\n            <audio src={lastSeconds} className=\"audio-element\"></audio>\r\n          </div>\r\n          <div style={{ visibility: \"hidden\" }}>\r\n            <audio src={lastSecond} className=\"audio-element\"></audio>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"first-row\">\r\n            <div className=\"item-content\">\r\n              <label>Exercise Name</label>\r\n            </div>\r\n            <div className=\"item-content\">\r\n              <label>Minutes</label>\r\n            </div>\r\n            <div className=\"item-content\">\r\n              <label>Seconds</label>\r\n            </div>\r\n            <div className=\"item-content\">\r\n              <label>Add</label>\r\n            </div>\r\n          </div>\r\n\r\n          <Disable disabled={this.state.blocking}>\r\n            <div className=\"second-row\">\r\n              <div className=\"item-content\">\r\n                <input\r\n                  type=\"text\"\r\n                  maxLength=\"20\"\r\n                  value={this.state.currentItem.exerciseText}\r\n                  onChange={this.handleChangeText}\r\n                />\r\n              </div>\r\n              <div className=\"item-content\">\r\n                <input\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  max=\"59\"\r\n                  value={this.state.currentItem.displayedMinutes}\r\n                  onChange={this.handleChangeMinutes}\r\n                />\r\n              </div>\r\n              <div className=\"item-content\">\r\n                <input\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  max=\"59\"\r\n                  value={this.state.currentItem.displayedSeconds}\r\n                  onChange={this.handleChangeSeconds}\r\n                />\r\n              </div>\r\n              <div className=\"item-content\">\r\n                <button onClick={this.handleAddButon} type=\"button\">\r\n                  <i className=\"fa fa-plus addition\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Disable>\r\n\r\n          <ListItems\r\n            startCountdown={this.state.startCountdown}\r\n            items={this.state.items}\r\n            deleteItem={this.deleteItem}\r\n            setUpdate={this.setUpdate}\r\n            blocking={this.state.blocking}\r\n            duplicateItem={this.duplicateItem}\r\n          />\r\n\r\n          <Timer\r\n            items={this.state.items}\r\n            turnBlockingOn={this.turnBlockingOn}\r\n            turnBlockingOff={this.turnBlockingOff}\r\n            totalDurationInSeconds={this.state.totalDurationInSeconds}\r\n            totalDisplayedDurationInSeconds={\r\n              this.state.totalDisplayedDurationInSeconds\r\n            }\r\n            startCountdownItem={this.startCountdownItem}\r\n            stopCountdownItem={this.stopCountdownItem}\r\n            resetTimer={this.resetTimer}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\n\r\n          <Disable disabled={this.state.blocking}>\r\n          </Disable>\r\n\r\n\r\n*/\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./style.css\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}